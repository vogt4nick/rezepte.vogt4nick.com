name: Build & Deploy
on: [push]

env:
  MKDOCS_SITE_DIR: ~/site

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.11
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-dev
      - name: Build docs
        run: poetry run mkdocs build --strict --site-dir ${{ env.MKDOCS_SITE_DIR }}
      - name: Archive site
        uses: actions/upload-artifact@master
        with:
          name: site
          path: ${{ env.MKDOCS_SITE_DIR }}
  bump_version:
    if: ${{ !startsWith(github.event.head_commit.message, 'bump:') && github.ref == 'refs/heads/main' }}
    name: "Bump version and create changelog"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        id: cz
        with:
          branch: main
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Deploy site
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download site
        uses: actions/download-artifact@master
        with:
          name: site
          path: ${{ env.MKDOCS_SITE_DIR }}
      - name: Deploy docs
        run: >-
          aws s3 sync ${{ env.MKDOCS_SITE_DIR }} s3://rezepte.vogt4nick.com
          --delete --acl public-read --no-progress
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
